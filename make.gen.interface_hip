# File: make.gen.interface_hip
#   @author Cade Brown <cbrow216@vols.utk.edu>
#
# Generates the `interface_hip` folder automatically from the `interface_cuda` directory automatically
#
# Run like:
# $ make -f make.gen.interface_hip
#
# To clean/remove all changes:
# $ make -f make.gen.interface_hip clean
#
#
# To set the `HIPIFY` script, run:
# $ export HIPIFY=/path/to/hipify-perl
# (or the equivalent for your shell)
#
# -*-
#
# Notes: Never touches or changes anything other than interface_hip/
#
# This is not a full solution yet; some of our code needs to probably be changed in MAGMA
#   For instance, adding HIP-specific things and a more configurable build process (so it can be built without cublas)
#

# utility functions
HIPIFY            ?= tools/hipify-perl

# TODO: Distribute a `hipify` script with MAGMA

ifeq ($(HIPIFY),)
$(error Could not find `hipify` please run like `HIPIFY=... make interface_hip`)
endif

#*- input files -*#


#*- input sources -*#

interface_cuda_src_cpp := $(wildcard interface_cuda/*.cpp)
interface_cuda_src_h   := $(wildcard interface_cuda/*.h)
interface_cuda_src_mk  := $(wildcard interface_cuda/Makefile*)


#*- generated output -*#

interface_hip_src_cpp  := $(subst interface_cuda,interface_hip,$(interface_cuda_src_cpp))
interface_hip_src_h    := $(subst interface_cuda,interface_hip,$(interface_cuda_src_h))
interface_hip_src_mk   := $(subst interface_cuda,interface_hip,$(interface_cuda_src_mk))


#*- build rules -*#

# a 'fake' target to build and force the creation of the output directory
_FAKE_TARGET = interface_hip/.cache

# by default just build everything
all: $(_FAKE_TARGET)

# special rule to build fake target instead
.PHONY: all clean $(_FAKE_TARGET)

# have the cache set on all generated outputs
$(_FAKE_TARGET): interface_hip $(interface_hip_src_cpp) $(interface_hip_src_h) $(interface_hip_src_mk)

# just creates the directory
interface_hip:
	mkdir -p $@

# removes the directory (which is the only place this makefile will generate to 
clean:
	rm -rf interface_hip

# basic cpp translation
interface_hip/%.cpp: interface_cuda/%.cpp
	$(HIPIFY) $< > $@

interface_hip/%.h: interface_cuda/%.h
	$(HIPIFY) $< > $@

# little hack so % acts like Makefile*.
interface_hip/Makefil%: interface_cuda/Makefil%
	cp $< $@
	@sed -i -e "s/:=  *interface_cuda/:= interface_hip/g" $@
	@sed -i -e "s/.cuh/.hip.hpp/g" $@
	@sed -i -e "s/.cu/.hip.cpp/g" $@



